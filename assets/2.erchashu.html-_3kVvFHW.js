import{_ as l,o as i,c as n,a as e}from"./app-T0ug101R.js";const a="/assets/1707831654182-i9GRzDrK.png",t={},h=e('<h2 id="_1-二叉树的特点" tabindex="-1"><a class="header-anchor" href="#_1-二叉树的特点" aria-hidden="true">#</a> 1. 二叉树的特点</h2><ol><li>每个节点的度最大为2 （最多拥有2颗子树)</li><li>二叉树是有序数，左子树和右子树是有顺序的</li></ol><p>比如下面是2颗二叉树</p><p><img src="'+a+'" alt="1707831654182"></p><ol start="3"><li>即使某节点只有一颗子树，也要区分左右子树</li></ol><h2 id="_2-二叉树的性质" tabindex="-1"><a class="header-anchor" href="#_2-二叉树的性质" aria-hidden="true">#</a> 2. 二叉树的性质</h2><ol><li>非空二叉树的第i层，最多有2^(i-1)个节点 （i&gt;=1)</li><li>高度为h的二叉树最多有2^h-1个节点 （h&gt;=1)</li><li>⭐️ 对于任何一颗二叉树，如果叶子节点树为n0, 度为2的节点数为n2, 则有: n0=n2+1</li></ol><blockquote><p>证明：</p><p>令：n0=叶子节点树 n1=度为1的节点树 n2=度为2的节点树，n=总节点数</p><p>∴ n=n0 + n1 + n2</p><p>另: ∵ 边数=0×n0 + 1×n1+2×n2=n1 + 2×n2</p><p>又∵只有根节点没有边，即 边数=n-1</p><p>∴ n1+2×n2 =n0 + n1 + n2 -1</p><p>∴ n0 = n2 + 1</p></blockquote><h2 id="_3-真二叉树" tabindex="-1"><a class="header-anchor" href="#_3-真二叉树" aria-hidden="true">#</a> 3. 真二叉树</h2><p>所有节点的度要么为0，要么为2</p><h2 id="_4-满二叉树" tabindex="-1"><a class="header-anchor" href="#_4-满二叉树" aria-hidden="true">#</a> 4. 满二叉树</h2><p>所有节点的度要么为0，要么为2，且所有叶子节点都在最后一层</p><blockquote><p>满二叉树一定是真二叉树， 真二叉树不一定是满二叉树</p></blockquote><blockquote><p>假设满二叉树的高度为h (h&gt;=1), 那么</p><ul><li>第i层的节点数量： 2^i -1</li><li>叶子节点数量：2^(h-1)</li><li>总结点数量 n=2^h -1</li></ul></blockquote><h2 id="_5-完全二叉树" tabindex="-1"><a class="header-anchor" href="#_5-完全二叉树" aria-hidden="true">#</a> 5. 完全二叉树</h2><ul><li>叶子节点只会出现在最后2层（所有节点的高度差&lt;=1)，且最后1层的叶子节点都靠左对齐</li></ul><blockquote><p>满二叉树一定是完全二叉树，完全二叉树不一定是满二叉树</p></blockquote><ul><li>度为1的节点只有左子树</li><li>度为1的节点要么只有1个，要么是0个</li><li>同样节点数量的二叉树，完全二叉树的高度最小 （因为是按层填充的)</li><li>假设完全二叉树的高度为h (h&gt;=1), 那么 <ul><li>至少有2^(h-1)个节点 (2^(h-2) -1 + 1)</li><li>最多有2^h - 1个节点(满二叉树)</li></ul></li><li>假如总节点数n <ul><li>h-1&lt;=log2n&lt;h</li><li>h=floor(log2n)+1</li></ul></li><li>⭐️ （用数组来表示完全二叉树)一颗有n个节点的完全二叉树，从上到下、从左到右对节点从0开始编号，对于任意第i个节点 <ul><li>如果i=0, 根节点</li><li>如果i&gt;0, 父节点编号为floor ((i-1)/2)</li><li>如果2i+1&lt;=n-1, 它的左子节点编号为2i+1</li><li>如果2i+1&gt;n-1, 它无左子节点</li><li>如果2i+2&lt;=n-1, 它的右子节点编号为2i+2</li></ul></li></ul>',18),o=[h];function r(c,p){return i(),n("div",null,o)}const d=l(t,[["render",r],["__file","2.erchashu.html.vue"]]);export{d as default};
