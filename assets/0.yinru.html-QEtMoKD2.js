import{_ as t,r as l,o as s,c as _,d as e,e as n,b as c}from"./app-s8JulthU.js";const r={},a={href:"https://www.bilibili.com/video/BV1Bq4y1e7fn?p=83&vd_source=1a8dfd0059fdc251970aadb3f81b1338",target:"_blank",rel:"noopener noreferrer"},i=e("p",null,"本来看这个视频是为了学习红黑树，因为这个一直学的懵里懵懂的。所以一开始我直接看红黑树的几个视频，结果还是一脸懵逼，发现这块知识强烈依赖于前面的树、BST、AVL树、B树等等知识，因此干脆完整了看了树这一章，并形成了自己的笔记。",-1),d=e("p",null,"学习过程中发现了系统学习的重要性，比如我想知道红黑树的增删改查到底是咋回事，什么左旋右旋，什么染色，那我直接看红黑树，找了大量的网上的资料，死活看不明白，而当我耐下心把树的概念、BST的概念刚刚搞清楚了，然后结合AVL树的旋转操作，再结合4阶B树的添加删除，也就明白了红黑树到底是咋回事了。",-1),u=e("p",null,"其实我一直有个学习的误区，就是学习一个技术，没有去思考为什么别人会发明这个技术，而直接去学，也就是没有搞清楚来龙，就想搞清楚去脉，这是很不可取的。",-1),p=e("p",null,"一个技术的发明一定是为了解决某种类型的问题，那么我们可以先去了解这个技术产生的背景，在这个技术出现之前，人们是如何解决这类问题的。",-1),h=e("p",null,"我们会发现技术的发展往往会有这样的规律，",-1),f=e("ul",null,[e("li",null,"一开始的解决办法都是很简单，易于理解的，但是也往往是低效的"),e("li",null,"随着场景和需求变得复杂，简单的方法不灵了，然后我们会在这个简单办法上进行改进，它可能会变得复杂（虽然可能更易于使用)，难以理解，但是它确实能更有效的解决问题")],-1),B=e("p",null,"因此复杂的方法不是凭空出现的，它一定是从最简单最自然的方案迭代出来的，通过回溯这些方案的迭代历史，我们更好的理解现有的复杂方案的内在逻辑。",-1),m=e("p",null,"就好像我们直接学SpringMVC, 但是没有去学Java Servlet, 就无法真正理解SpringMVC框架是如何跟Tomcat容器配合工作的，虽然这并不影响CRUD Boy的日常开发。",-1);function V(v,b){const o=l("ExternalLinkIcon");return s(),_("div",null,[e("p",null,[n("本系列文章主要是学习了B站的"),e("a",a,[n("《小马哥恋上数据结构》"),c(o)]),n("中《二叉树》章节后做的整理，很多思路都是参考了原视频，然后自己画图加代码实现。")]),i,d,u,p,h,f,B,m])}const k=t(r,[["render",V],["__file","0.yinru.html.vue"]]);export{k as default};
