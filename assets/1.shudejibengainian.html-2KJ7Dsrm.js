import{_ as i,o as l,c as e,a}from"./app-T0ug101R.js";const n={},t=a('<p>在二叉树的讨论中经常设计到一些概念。</p><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念" aria-hidden="true">#</a> 基本概念</h2><ol><li>节点、根节点、父节点、子节点、兄弟节点、叔节点 <ul><li>节点：所有的圆圈，包含了数据</li><li>根节点：A</li><li>父节点：A是B的父节点，B是C的父节点</li><li>子节点：B是A的子节点，E是C的子节点</li><li>兄弟节点：拥有同一个父节点的子节点。B、C互为兄弟节点</li><li>叔节点：父节点的兄弟节点。C是D的叔节点</li></ul></li></ol><p>![image-20240213212354630](./image/1. 基本概念/image-20240213212354630.png)</p><ol start="2"><li>一棵树可以没有任何节点，称为空树</li><li>一棵树可以只有一个节点，也就是只有根节点</li><li>子树、左子树、右子树</li><li>节点的度(degree): 子树的个数，二叉树的度 0,1,2</li><li>树的度：所有节点度中最大值</li><li>叶子节点：度为0的节点</li><li>非叶子节点：度不为0的节点</li><li>层数：根节点第1层，根节点的子节点在第2层，以此类推</li><li>节点深度: 从根节点到当前节点的唯一路径上的节点总数</li><li>节点的高度：从当前节点到最远的叶子节点的路径上的节点总数</li><li>树的深度：所有节点深度中的最大值</li><li>树的高度：所有节点高度中的最大值</li><li>树的深度=树的高度</li></ol><h2 id="有序树、无序树、森林" tabindex="-1"><a class="header-anchor" href="#有序树、无序树、森林" aria-hidden="true">#</a> 有序树、无序树、森林</h2><ol><li>有序树：树中任意节点的子节点之间有顺序关系</li><li>无序树：树中任意节点之间没有顺序关系</li></ol>',7),o=[t];function r(c,s){return l(),e("div",null,o)}const h=i(n,[["render",r],["__file","1.shudejibengainian.html.vue"]]);export{h as default};
